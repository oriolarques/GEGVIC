% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_ic.R
\name{module_ic}
\alias{module_ic}
\title{module_ic}
\usage{
module_ic(
  counts,
  genes_id,
  biomart,
  indications = NULL,
  cibersort = NULL,
  tumor = TRUE,
  rmgenes = NULL,
  scale_mrna = TRUE,
  expected_cell_types = NULL,
  metadata,
  response,
  compare = NULL,
  p_label = "p.format",
  colors = c("orange", "black"),
  points = TRUE
)
}
\arguments{
\item{counts}{Data frame that contains gene expression data as raw counts.}

\item{genes_id}{Name of the column that contains gene identifiers. Should be
one of the following:'entrez_gene_id', 'ensemblgene_id' or 'hgnc_symbol'.}

\item{biomart}{Data frame containing a biomaRt query with the following
attributes: ensembl_gene_id, hgnc_symbol, entrezgene_id, transcript_length,
refseq_mrna. In the case of mus musculus data, external_gene_name must be
obtained and then change the column name for hgnc_symbol. Uploaded biomaRt
queries in GEGVIC: 'ensembl_biomartGRCh37', ensembl_biomartGRCh38_p13' and
'ensembl_biomartGRCm38_p6', 'ensembl_biomartGRCm39'.}

\item{indications}{Character vector of cancer type codes for each sample in
the tpm matrix.This is used by TIMER method. Indications supported
can be checked using immunedeconv::timer_available_cancers. Default value is
NULL.}

\item{cibersort}{Path to the CIBERSORT.R and LM22.txt files. Default value is
NULL.}

\item{tumor}{Logical value to define if samples are tumors. If so EPIC and
quanTIseq use a signature matrix/procedure optimized for tumor samples.
Default value is TRUE.}

\item{rmgenes}{A character vector of gene symbols. Exclude these genes from
the analysis. Use this to exclude e.g. noisy genes.}

\item{scale_mrna}{Logical. If FALSE, disable correction for mRNA content of
different cell types. This is supported by methods that compute an absolute
score (EPIC and quanTIseq). Default value is TRUE.}

\item{expected_cell_types}{Limit the analysis to the cell types given in this
list. If the cell types present in the sample are known a priori, setting
this can improve results for xCell
(see https://github.com/grst/immunedeconv/issues/1).}

\item{metadata}{Data frame that contains supporting variables to the data.}

\item{response}{Unquoted name of the variable indicating the groups to analyse.}

\item{compare}{A character string indicating which method to be used for
comparing means. Options are 't.test' and 'wilcox.test' for two groups or
'anova' and 'kruskal.test' for more groups. Default value is NULL.}

\item{p_label}{Character string specifying label type. Allowed values include
'p.signif' (shows the significance levels), 'p.format' (shows the formatted
p-value).}

\item{colors}{Character vector indicating the colors of the different groups
to compare. Default values are two: black and orange.}

\item{points}{Logical value to decide if points are added to the plot.}
}
\value{
Returns ggplot objects showing predicted immune cell populations to
be compared between or within samples. Also it returns a list of tables with
the data necessary to produce the plots.
}
\description{
Estimates the composition of immune cell composition from RNA-seq
raw data. Additionally it calculates an immunophenogram and immunophenoscores
for each sample and groups of study.
}
\examples{
tables_module_ic <- module_ic(counts = sample_counts,
                              genes_id = 'ensembl_gene_id',
                              biomart = ensembl_biomart_GRCh38_p13,
                              indications = rep('coad', ncol(sample_counts[-1])),
                              cibersort = NULL,
                              metadata = sample_metadata,
                              response = MSI_status,
                              compare = 'wilcox.test',
                              p_label = 'p.format',
                              colors = c('orange', 'black'),
                              points = TRUE)

}
